name: Build Electron

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:
    inputs:
      build-type:
        type: choice
        options:
          - full
          - quick
        default: "quick"
        description: "Select build type"
      mac-only:
        type: boolean
        default: false
        description: "Build only macOS"
      tag:
        type: string
        default: ""
        description: "Release tag to upload to (required for mac-only)"

concurrency:
  group: build-electron-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-electron:
    if: github.event.inputs.mac-only != 'true'
    runs-on: ubuntu-latest

    outputs:
      build_type: ${{ steps.determine_build_type.outputs.build_type }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: 📦 Install dependencies
        run: |
          npm install -g typescript tsc-alias
          npm install

      - name: 🌐 Build frontend
        run: |
          cd front
          npm install
          npm run build

      - name: 🤖 Determine build type
        id: determine_build_type
        run: |
          if [ -z "${{ github.event.inputs.build-type }}" ]; then
            echo "build_type=full" >> $GITHUB_OUTPUT
            echo "BUILD_TYPE=full" >> $GITHUB_ENV
          else
            echo "build_type=${{ github.event.inputs.build-type }}" >> $GITHUB_OUTPUT
            echo "BUILD_TYPE=${{ github.event.inputs.build-type }}" >> $GITHUB_ENV
          fi

      - name: 🍷 Setup Wine & base Linux tools
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y wine32 wine64 libarchive-tools

      - name: 📦 Install pacman/rpm
        if: env.BUILD_TYPE == 'full'
        run: |
          sudo apt install -y pacman fakeroot rpm

      - name: 📦 Install gh
        if: env.BUILD_TYPE == 'quick'
        run: |
          sudo apt install -y gh

      - name: ⚙️ Compile TypeScript
        run: |
          npm run build
          rm -rf public/scss

      - name: 🚀 Full build and publish
        if: env.BUILD_TYPE == 'full'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder --publish always --win --linux

      - name: 📦 Quick build (only zip)
        if: env.BUILD_TYPE == 'quick'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder build --win zip --linux zip

      - name: 📤 Upload quick build to pre-release
        if: env.BUILD_TYPE == 'quick'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="pre-release-$(date +%Y%m%d%H%M%S)"
          gh release create "$TAG_NAME" \
            --prerelease \
            --title "Quick Build $TAG_NAME" \
            --notes "Automated quick build from $GITHUB_SHA" \
            release/*.zip

  build-mac:
    name: 🍏 Build macOS
    runs-on: macos-latest
    needs: [build-electron]
    if: |
      (github.event_name == 'push') ||
      (github.event.inputs.mac-only == 'true') ||
      (github.event.inputs.build-type == 'full')

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: 📦 Install dependencies
        run: |
          npm install -g typescript tsc-alias
          npm install

      - name: ⚙️ Compile TypeScript
        run: |
          npm run build

      - name: 🚀 Build macOS app (no code signing)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder --mac zip

      - name: 📤 Upload to release (auto or manual)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.mac-only }}" = "true" ]; then
            if [ -z "${{ github.event.inputs.tag }}" ]; then
              echo "::error ::Manual mac-only build requires 'tag' input"
              exit 1
            fi
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF_NAME}"
          fi

          gh release upload "$TAG" release/*.zip --clobber
